
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AS EQ FOR GT GTE ID IF INT LT LTE NEQ OFrule : FOR var AS ID IF exprvar : IDexpr : term oper termterm : ID\n\t\t\t| INToper : EQ\n\t\t\t| NEQ\n\t\t\t| GT\n\t\t\t| LT\n\t\t\t| GTE\n\t\t\t| LTE'
    
_lr_action_items = {'FOR':([0,],[2,]),'$end':([1,8,9,11,19,],[0,-4,-1,-5,-3,]),'ID':([2,5,7,12,13,14,15,16,17,18,],[4,6,8,8,-6,-7,-8,-9,-10,-11,]),'AS':([3,4,],[5,-2,]),'IF':([6,],[7,]),'INT':([7,12,13,14,15,16,17,18,],[11,11,-6,-7,-8,-9,-10,-11,]),'EQ':([8,10,11,],[-4,13,-5,]),'NEQ':([8,10,11,],[-4,14,-5,]),'GT':([8,10,11,],[-4,15,-5,]),'LT':([8,10,11,],[-4,16,-5,]),'GTE':([8,10,11,],[-4,17,-5,]),'LTE':([8,10,11,],[-4,18,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rule':([0,],[1,]),'var':([2,],[3,]),'expr':([7,],[9,]),'term':([7,12,],[10,19,]),'oper':([10,],[12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> rule","S'",1,None,None,None),
  ('rule -> FOR var AS ID IF expr','rule',6,'p_rule','rule_parser.py',34),
  ('var -> ID','var',1,'p_var','rule_parser.py',37),
  ('expr -> term oper term','expr',3,'p_expr','rule_parser.py',40),
  ('term -> ID','term',1,'p_term','rule_parser.py',43),
  ('term -> INT','term',1,'p_term','rule_parser.py',44),
  ('oper -> EQ','oper',1,'p_oper','rule_parser.py',47),
  ('oper -> NEQ','oper',1,'p_oper','rule_parser.py',48),
  ('oper -> GT','oper',1,'p_oper','rule_parser.py',49),
  ('oper -> LT','oper',1,'p_oper','rule_parser.py',50),
  ('oper -> GTE','oper',1,'p_oper','rule_parser.py',51),
  ('oper -> LTE','oper',1,'p_oper','rule_parser.py',52),
]
